{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.20.4.51522",
      "templateHash": "10009095889168256386"
    }
  },
  "parameters": {
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "minLength": 1,
      "maxLength": 64,
      "metadata": {
        "description": "Environment name used as a tag for all resources"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "minLength": 1,
      "metadata": {
        "description": "Primary location for all resources"
      }
    },
    "resourceGroupName": {
      "type": "string"
    },
    "servicesNameSufix": {
      "type": "string",
      "minLength": 1,
      "maxLength": 4,
      "metadata": {
        "description": "Prefix for all resources names. Must be 4 characters or less. Example: 0610"
      }
    },
    "chatGptDeploymentName": {
      "type": "string",
      "defaultValue": "chat"
    },
    "chatGptDeploymentCapacity": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 20,
      "metadata": {
        "description": "GPT model tokens per Minute Rate Limit (thousands). Default quota per model and region: gpt-4: 20; gpt-4-32: 60; All others: 240"
      }
    },
    "chatGptModelName": {
      "type": "string",
      "defaultValue": "gpt-35-turbo-16k",
      "allowedValues": [
        "gpt-35-turbo-16k",
        "gpt-4",
        "gpt-4-32k"
      ]
    },
    "embeddingsDeploymentName": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002"
    },
    "embeddingsDeploymentCapacity": {
      "type": "int",
      "defaultValue": 10,
      "minValue": 1,
      "maxValue": 240,
      "metadata": {
        "description": "Embeddings model tokens per Minute Rate Limit (thousands). Default quota per model and region: 240"
      }
    },
    "embeddingsModelName": {
      "type": "string",
      "defaultValue": "text-embedding-ada-002",
      "allowedValues": [
        "text-embedding-ada-002"
      ]
    }
  },
  "variables": {
    "keyVaultName": "[format('kv{0}', parameters('servicesNameSufix'))]",
    "storageAccountName": "[format('strag{0}', parameters('servicesNameSufix'))]",
    "speechServiceName": "[format('speech{0}', parameters('servicesNameSufix'))]",
    "formRecognizerServiceName": "[format('fr{0}', parameters('servicesNameSufix'))]",
    "azureAppServicePlanName": "[format('plan{0}', parameters('servicesNameSufix'))]",
    "azureAppServiceName": "[format('webgpt{0}', parameters('servicesNameSufix'))]",
    "orchestratorFunctionsName": "[format('fnorc{0}', parameters('servicesNameSufix'))]",
    "dataIngestionFunctionsName": "[format('fning{0}', parameters('servicesNameSufix'))]",
    "searchServiceName": "[format('search{0}', parameters('servicesNameSufix'))]",
    "searchServiceSkuName": "standard",
    "openAiServiceName": "[format('oai{0}', parameters('servicesNameSufix'))]",
    "principalId": "",
    "tags": {
      "azd-env-name": "[parameters('environmentName')]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('resourceGroupName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "openai",
      "resourceGroup": "[parameters('resourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('openAiServiceName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "tags": {
            "value": "[variables('tags')]"
          },
          "sku": {
            "value": {
              "name": "S0"
            }
          },
          "deployments": {
            "value": [
              {
                "name": "[parameters('chatGptDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('chatGptModelName')]",
                  "version": "0613"
                },
                "capacity": "[parameters('chatGptDeploymentCapacity')]"
              },
              {
                "name": "[parameters('embeddingsDeploymentName')]",
                "model": {
                  "format": "OpenAI",
                  "name": "[parameters('embeddingsModelName')]",
                  "version": "2"
                },
                "capacity": "[parameters('embeddingsDeploymentCapacity')]"
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.20.4.51522",
              "templateHash": "11845522226646995949"
            }
          },
          "parameters": {
            "name": {
              "type": "string"
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]"
            },
            "tags": {
              "type": "object",
              "defaultValue": {}
            },
            "customSubDomainName": {
              "type": "string",
              "defaultValue": "[parameters('name')]"
            },
            "deployments": {
              "type": "array",
              "defaultValue": []
            },
            "kind": {
              "type": "string",
              "defaultValue": "OpenAI"
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "Enabled"
            },
            "sku": {
              "type": "object",
              "defaultValue": {
                "name": "S0"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.CognitiveServices/accounts",
              "apiVersion": "2023-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "customSubDomainName": "[parameters('customSubDomainName')]",
                "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
              },
              "sku": "[parameters('sku')]"
            },
            {
              "copy": {
                "name": "deployment",
                "count": "[length(parameters('deployments'))]",
                "mode": "serial",
                "batchSize": 1
              },
              "type": "Microsoft.CognitiveServices/accounts/deployments",
              "apiVersion": "2023-05-01",
              "name": "[format('{0}/{1}', parameters('name'), parameters('deployments')[copyIndex()].name)]",
              "properties": {
                "model": "[parameters('deployments')[copyIndex()].model]",
                "raiPolicyName": "[if(contains(parameters('deployments')[copyIndex()], 'raiPolicyName'), parameters('deployments')[copyIndex()].raiPolicyName, null())]"
              },
              "sku": {
                "name": "Standard",
                "capacity": "[parameters('deployments')[copyIndex()].capacity]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "endpoint": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', parameters('name')), '2023-05-01').endpoint]"
            },
            "id": {
              "type": "string",
              "value": "[resourceId('Microsoft.CognitiveServices/accounts', parameters('name'))]"
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('resourceGroupName'))]"
      ]
    }
  ]
}